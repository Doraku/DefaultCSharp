<Project>

  <PropertyGroup>

    <PublishRepositoryUrl>true</PublishRepositoryUrl>

    <ContinuousIntegrationBuild Condition="'$(GITHUB_ACTIONS)' == 'true'">true</ContinuousIntegrationBuild>

  </PropertyGroup>

  <ItemGroup>

    <SourceRoot Condition="'$(GITHUB_ACTIONS)' == 'true'" Include="$(RepoRoot)" />

  </ItemGroup>

  <PropertyGroup Condition="'$(DefaultCSharpPackageIconFile)' != ''">
    <PackageIcon>$([System.IO.Path]::GetFileName('$(DefaultCSharpPackageIconFile)'))</PackageIcon>
  </PropertyGroup>
  <ItemGroup Condition="'$(DefaultCSharpPackageIconFile)' != ''">
    <None Include="$(DefaultCSharpPackageIconFile)" Pack="true" PackagePath="\" Visible="false" />
  </ItemGroup>

  <PropertyGroup Condition="'$(DefaultCSharpPackageReadmeFile)' != ''">
    <PackageReadmeFile>$([System.IO.Path]::GetFileName('$(DefaultCSharpPackageReadmeFile)'))</PackageReadmeFile>
  </PropertyGroup>
  <ItemGroup Condition="'$(DefaultCSharpPackageReadmeFile)' != ''">
    <None Include="$(DefaultCSharpPackageReadmeFile)" Pack="true" PackagePath="\" Visible="false" />
  </ItemGroup>

  <Target Name="DefaultCSharpPreparePackageReleaseNotesFromFile" BeforeTargets="GenerateNuspec" Condition="'$(DefaultCSharpPackageReleaseNotesFile)' != ''">

    <ReadLinesFromFile File="$(DefaultCSharpPackageReleaseNotesFile)">
      <Output TaskParameter="Lines" ItemName="ReleaseNotesLines" />
    </ReadLinesFromFile>

    <PropertyGroup>
      <PackageReleaseNotes>@(ReleaseNotesLines, '%0a')</PackageReleaseNotes>
    </PropertyGroup>

  </Target>

  <ItemGroup>

    <EditorConfigFiles Include="$(MSBuildThisFileDirectory)..\configuration\*.editorconfig" />

    <EditorConfigFiles
       Condition="'$(IsTestProject)'=='true'"
       Include="$(MSBuildThisFileDirectory)..\configuration\test\*.editorconfig" />

  </ItemGroup>

  <!-- fix for Polyfill transitive reference -->
  <Import Project="$(MSBuildThisFileDirectory)Polyfill.targets" Condition="Exists('$(MSBuildThisFileDirectory)Polyfill.targets')"/>
  <ItemGroup>
    <Compile Update="@(Compile)">
      <Visible Condition="'%(NuGetItemType)' == 'Compile' and '%(NuGetPackageId)' == 'DefaultCSharp'">false</Visible>
    </Compile>
  </ItemGroup>

</Project>
